---
layout:        post
title:         "从零开始学Python"
author:       "杨大仙"
header-style: text
catalog:      true
tags:
    -Python
---

>文章来源:https://docs.python.org/zh-cn/3/tutorial/index.html
>有任何问题或建议,请联系我QQ:3370435491@qq.com

建议使用 **Edge** 浏览器,体验效果更佳.

Python 是一门易于学习,功能强大的编程语言.它提供了高效的高级数据结构,还能简单有效地面向对象编程.
Python 优雅的语法和动态类型以及解释型语言的本质,使它成为多数平台上写脚本和快速开发应用的理想语言.

请阅读下方文本熟悉Python语言.
*** 杨大仙自拟 ***

## 1 Python 简介

- Python在各个编程语言中比较适合新手学习,Python解释器易于扩展,可以使用C、C++或其他可以通过C调用的语言扩展新的功能和数据类型.

- Python也可以用于可定制化软件中的扩展程序语言.

- Python丰富的标准库,提供了适用于各个主要系统平台的源码或机器码.

## 2 相关文档

- 1.[观前甜点](https://docs.python.org/zh-cn/3/tutorial/appetite.html)
- 2.[使用Python的解释器](https://docs.python.org/zh-cn/3/tutorial/interpreter.html)
    - 2.1[唤出解释器](https://docs.python.org/zh-cn/3/tutorial/interpreter.html#invoking-the-interpreter)
    - 2.1.1[传入参数](https://docs.python.org/zh-cn/3/tutorial/interpreter.html#argument-passing)
    - 2.1.2[交互模式](https://docs.python.org/zh-cn/3/tutorial/interpreter.html#interactive-mode)
    - 2.2[解释器的运行环境](https://docs.python.org/zh-cn/3/tutorial/interpreter.html#the-interpreter-and-its-environment)
    - 2.2.1[源文件的字符编码](https://docs.python.org/zh-cn/3/tutorial/interpreter.html#source-code-encoding)
- 3.[Python速览](https://docs.python.org/zh-cn/3/tutorial/introduction.html)
    - 3.1[Python用作计算器](https://docs.python.org/zh-cn/3/tutorial/introduction.html#using-python-as-a-calculator)
        - 3.1.1[数字](https://docs.python.org/zh-cn/3/tutorial/introduction.html#numbers)
        - 3.1.2[文本](https://docs.python.org/zh-cn/3/tutorial/introduction.html#text)
        - 3.1.3[列表](https://docs.python.org/zh-cn/3/tutorial/introduction.html#lists)
    - 3.2[走向编程的第一步](https://docs.python.org/zh-cn/3/tutorial/introduction.html#first-steps-towards-programming)
- 4.[更多控制流工具](https://docs.python.org/zh-cn/3/tutorial/controlflow.html)
    - 4.1[if语句](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#if-statements)
    - 4.2[for语句](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#for-statements)
    - 4.3[range()函数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#the-range-function)
    - 4.4[循环中的break,continue语句及else子句](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops)
    - 4.5[pass语句](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#pass-statements)
    - 4.6[match语句](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#match-statements)
    - 4.7[定义函数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#defining-functions)
    - 4.8[函数定义详解](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#more-on-defining-functions)
        - 4.8.1[默认值参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#default-argument-values)
        - 4.8.2[关键字参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#keyword-arguments)
        - 4.8.3[特殊参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#special-parameters)
            - 4.8.3.1[位置或关键字参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#positional-or-keyword-arguments)
            - 4.8.3.2[仅位置参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#positional-only-parameters)
            - 4.8.3.3[仅限关键字参数](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#keyword-only-arguments)
            - 4.8.3.4[函数示例](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#function-examples)
            - 4.8.3.5[小结](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#recap)
        - 4.8.4[任意实参列表](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#arbitrary-argument-lists)
        - 4.8.5[解包实参列表](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#unpacking-argument-lists)
        - 4.8.6[Lambda表达式](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#lambda-expressions)
        - 4.8.7[文档字符串](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#documentation-strings)
        - 4.8.8[函数注解](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#function-annotations)
    - 4.9[小插曲:解码风格](https://docs.python.org/zh-cn/3/tutorial/controlflow.html#intermezzo-coding-style)
- 5.[数据结构](https://docs.python.org/zh-cn/3/tutorial/datastructures.html)
    - 5.1[列表详解](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#more-on-lists)
     - 5.1.1[用列表实现堆栈](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#using-lists-as-stacks) 
     - 5.1.2[用列表实现队列](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#using-lists-as-queues) 
     - 5.1.3[列表推导式](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#list-comprehensions) 
     - 5.1.4[嵌套的列表推导式](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#nested-list-comprehensions) 
    - 5.2[del语句](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#the-del-statement)
    - 5.3[元组和序列](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#tuples-and-sequences)
    - 5.4[集合](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#sets)
    - 5.5[字典](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#dictionaries)
    - 5.6[循环的技巧](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#looping-techniques)
    - 5.7[深入条件控制](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#more-on-conditions)
    - 5.8[序列和其它类型的比较](https://docs.python.org/zh-cn/3/tutorial/datastructures.html#comparing-sequences-and-other-types)
- 6.[模块](https://docs.python.org/zh-cn/3/tutorial/modules.html)
    - 6.1[模块详解](https://docs.python.org/zh-cn/3/tutorial/modules.html#more-on-modules)
        - 6.1.1[以脚本方式执行模块](https://docs.python.org/zh-cn/3/tutorial/modules.html#executing-modules-as-scripts)
        - 6.1.2[模块搜索路径](https://docs.python.org/zh-cn/3/tutorial/modules.html#the-module-search-path)
        - 6.1.3["已编译的"Python文件](https://docs.python.org/zh-cn/3/tutorial/modules.html#compiled-python-files)
    - 6.2[标准模块](https://docs.python.org/zh-cn/3/tutorial/modules.html#standard-modules)
    - 6.3[dir()函数](https://docs.python.org/zh-cn/3/tutorial/modules.html#the-dir-function)
    - 6.4[包](https://docs.python.org/zh-cn/3/tutorial/modules.html#packages)
        - 6.4.1[从包中导入](https://docs.python.org/zh-cn/3/tutorial/modules.html#importing-from-a-package)
        - 6.4.2[相对导入](https://docs.python.org/zh-cn/3/tutorial/modules.html#intra-package-references)
        - 6.4.3[多目录中的包](https://docs.python.org/zh-cn/3/tutorial/modules.html#packages-in-multiple-directories)
- 7.[输入与输出](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html)
    - 7.1[更复杂的输出格式](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#fancier-output-formatting)
        - 7.1.1[格式化字符串字面值](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#formatted-string-literals)
        - 7.1.2[字符串format()方法](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#the-string-format-method)
        - 7.1.3[手动格式化字符串](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#manual-string-formatting)
        - 7.1.4[旧式字符串格式化方法](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#old-string-formatting)
    - 7.2[读写文件](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#reading-and-writing-files)
        - 7.2.1[文件对象的方法](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#methods-of-file-objects)
        - 7.2.2[使用json保存结构化数据](https://docs.python.org/zh-cn/3/tutorial/inputoutput.html#saving-structured-data-with-json)



## 未完目前只了解了这些























